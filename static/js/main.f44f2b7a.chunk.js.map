{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","serviceWorker.js","index.js"],"names":["AccountBalance","react_default","a","createElement","this","props","debitTotal","creditTotal","accountBalance","Component","Home","src","alt","react_router_dom","to","components_AccountBalance","UserProfile","className","userName","memberSince","LogIn","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","updatedUser","objectSpread","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogin","redirect","password","react_router","onSubmit","htmlFor","type","onChange","username","Credits","event","defineProperty","entry","id","md5","creditDesc","creditAmt","description","amount","parseFloat","date","Date","toISOString","addCredit","totalCredits","credits","map","key","placeholder","Debits","debitDesc","debitAmt","addDebit","totalDebits","debits","App","logInInfo","newUser","currentUser","addNewDebit","newEntry","push","calculateAccountBalance","addNewCredit","bind","assertThisInitialized","fetchAccountData","total_debit","reduce","x","y","total_credit","total","toFixed","_this2","axios","get","then","response","data","catch","err","console","log","_this3","exact","path","basename","render","src_components_Home","components_UserProfile","Login","assign","components_Credits","components_Debits","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f44f2b7a.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass AccountBalance extends Component {\n  render() {\n    return (\n      <div>\n        <h3>Debit Total: {this.props.debitTotal}</h3>\n        <h3>Credit Total: {this.props.creditTotal}</h3>\n        <h3>Account Balance: {this.props.accountBalance}</h3>\n      </div>\n      \n    );\n  }\n}\n\nexport default AccountBalance;","import React, { Component } from 'react'\nimport AccountBalance from './AccountBalance'\nimport { Link } from 'react-router-dom'\nimport './Home.css'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://howtodoanythingblog.files.wordpress.com/2013/04/bank-3d-icon-12912421-copy2.jpg\" alt=\"bank\"/>\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link><br />\n        <Link to=\"/debits\">Debits</Link><br />\n        <Link to=\"/credits\">Credits</Link>\n\n        <AccountBalance accountBalance={this.props.accountBalance} debitTotal={this.props.debitTotal} creditTotal={this.props.creditTotal}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;  ","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div> <br />\n        <div>Member Since: {this.props.memberSince}</div><br />\n        <Link to=\"/\">Back to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","import React, { Component } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\n\nclass LogIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  handleChange = e => {\n    const updatedUser = {...this.state.user};\n    const inputField = e.target.name;\n    const inputValue = e.target.value;\n\n    updatedUser[inputField] = inputValue;\n\n    this.setState({user: updatedUser});\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.mockLogin(this.state.user);\n    this.setState({redirect: true});\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return (<Redirect to=\"/userProfile\"/>);\n    }\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.username}/>\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" onChange={this.handleChange} value={this.state.user.password}/>\n          </div>\n          <button>Log In</button>\n        </form>\n        <Link to=\"/\">Back to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","import React, { Component } from 'react'\nimport md5 from 'blueimp-md5'\nimport { Link } from 'react-router-dom'\nimport './credit.css'\n\nclass Credits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      creditDesc: '',\n      creditAmt: ''\n    }\n  }\n\n  handleChange = event => {\n    const inputField = event.target.name;\n    const inputValue = event.target.value;\n\n    this.setState({\n      [inputField]: inputValue\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let id = md5(this.state.creditDesc + this.state.creditAmt);\n    let entry = {\n      id: id, \n      description: this.state.creditDesc, \n      amount: parseFloat(this.state.creditAmt),\n      date: (new Date()).toISOString()\n    }\n    this.props.addCredit(entry);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h1>Credits</h1>\n          <h3>Account Balance: {this.props.accountBalance}</h3>\n          <h3>Total Credits: {this.props.totalCredits}</h3>\n        </div>\n        <div>\n          {\n            this.props.credits.map(entry => {\n              return (\n                <div className=\"creditEntry\" key={entry.id}>\n                  <p>Description: {entry.description}</p>\n                  <p>Amount: {entry.amount}</p>\n                  <p>Date: {entry.date}</p>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <div>\n              <label htmlFor=\"creditDesc\">Credit Description</label>\n              <input name=\"creditDesc\" type=\"text\" onChange={this.handleChange} value={this.state.creditDesc} placeholder=\"Describe your transaction\"/>\n            </div>\n            <div>\n              <label htmlFor=\"creditAmt\">Credit Amount</label>\n              <input name=\"creditAmt\" type=\"number\" onChange={this.handleChange} value={this.state.creditAmt} placeholder=\"0.00\"/>\n            </div>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n        <Link to=\"/\">Back To Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default Credits;","import React, { Component } from 'react'\nimport md5 from 'blueimp-md5'\nimport { Link } from 'react-router-dom'\nimport './debit.css'\n\nclass Debits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      debitDesc: '',\n      debitAmt: ''\n    }\n  }\n\n  handleChange = event => {\n    const inputField = event.target.name;\n    const inputValue = event.target.value;\n\n    this.setState({\n      [inputField]: inputValue\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let id = md5(this.state.debitDesc + this.state.debitAmt);\n    let entry = {\n      id: id, \n      description: this.state.debitDesc, \n      amount: parseFloat(this.state.debitAmt),\n      date: (new Date()).toISOString()\n    }\n    this.props.addDebit(entry);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h1>Debits</h1>\n          <h3>Account Balance: {this.props.accountBalance}</h3>\n          <h3>Total Debits: {this.props.totalDebits}</h3>\n        </div>\n        <div>\n          {\n            this.props.debits.map(entry => {\n              return (\n                <div className=\"debitEntry\" key={entry.id}>\n                  <p>Description: {entry.description}</p>\n                  <p>Amount: {entry.amount}</p>\n                  <p>Date: {entry.date}</p>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <div>\n              <label htmlFor=\"debitDesc\">Debit Description</label>\n              <input name=\"debitDesc\" type=\"text\" onChange={this.handleChange} value={this.state.debitDesc} placeholder=\"Describe your transaction\"/>\n            </div>\n            <div>\n              <label htmlFor=\"debitAmt\">Debit Amount</label>\n              <input name=\"debitAmt\" type=\"number\" onChange={this.handleChange} value={this.state.debitAmt} placeholder=\"0.00\"/>\n            </div>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n        <Link to=\"/\">Back To Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default Debits;","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './components/Home'\nimport UserProfile from './components/UserProfile'\nimport LogIn from './components/Login'\nimport axios from 'axios'\nimport Credits from './components/Credits'\nimport Debits from './components/Debits'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      accountBalance: 0,\n      currentUser: {\n        userName: 'bob_loblaw',\n        memberSince: '08/23/99'\n      },\n      debits: [],\n      credits: [],\n      debitTotal: 0,\n      creditTotal: 0,\n    }\n    this.calculateAccountBalance = this.calculateAccountBalance.bind(this);\n    this.fetchAccountData = this.fetchAccountData.bind(this);\n  }\n\n  calculateAccountBalance() {\n    let total_debit = this.state.debits.reduce((x,y) => x + y.amount, 0);\n    let total_credit = this.state.credits.reduce((x,y) => x + y.amount, 0);\n    let total = total_credit - total_debit;\n    \n    this.setState({\n      accountBalance: total.toFixed(2),\n      creditTotal: total_credit,\n      debitTotal: total_debit\n    });\n  }\n\n  fetchAccountData() {\n    axios.get(\"https://moj-api.herokuapp.com/credits\")\n    .then(response => this.setState({credits: response.data}))\n    .then(() => axios.get(\"https://moj-api.herokuapp.com/debits\")\n          .then(response => this.setState({debits: response.data}))).catch(err => console.log(err)).then(() => this.calculateAccountBalance());\n  }\n\n  componentDidMount() {\n    this.fetchAccountData();\n  }\n\n  mockLogin = logInInfo => {\n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({\n      currentUser: newUser\n    });\n  }\n\n  addNewDebit = (newEntry) => {\n    const debits = this.state.debits;\n    debits.push(newEntry);\n    this.setState({debits: debits});\n    this.calculateAccountBalance();\n  }\n\n  addNewCredit = (newEntry) => {\n    const credits = this.state.credits;\n    credits.push(newEntry);\n    this.setState({credits: credits});\n    this.calculateAccountBalance();\n  }\n\n  render() {\n    const HomeComponent = () => <Home accountBalance={this.state.accountBalance} debitTotal={this.state.debitTotal} creditTotal={this.state.creditTotal}/>;\n    const UserProfileComponent = () => <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />;\n    const LogInComponent = () => <LogIn user={this.state.currentUser} mockLogin={this.mockLogin} {...this.props}/>\n    const CreditsViewComponent = () => <Credits credits={this.state.credits} addCredit={this.addNewCredit} totalCredits={this.state.creditTotal} accountBalance={this.state.accountBalance}/>\n    const DebitsViewComponent = () => <Debits debits={this.state.debits} addDebit={this.addNewDebit} totalDebits={this.state.debitTotal} accountBalance={this.state.accountBalance}/>\n\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" basename=\"/bank-of-react\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" basename=\"/bank-of-react\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" basename=\"/bank-of-react\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" basename=\"/bank-of-react\" render={CreditsViewComponent}/>\n          <Route exact path=\"/debits\" basename=\"/bank-of-react\" render={DebitsViewComponent}/>\n        </Switch>\n      </Router>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}